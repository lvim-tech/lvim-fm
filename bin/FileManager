#!/bin/bash

builtin cd "$1" || return

mkdir -p /tmp/lvim-file-manager
chmod 777 /tmp/lvim-file-manager

if [ ! -f /tmp/lvim-file-manager/action ]; then
    echo "menu" > /tmp/lvim-file-manager/action
fi

function print_fzf_menu {
	echo "󰙅 EXPLORER"
	echo "󰈔 SEARCH FILES"
	echo "󰈙 SEARCH IN FILES"
}

function print_fzf_header {
	echo " ."
	[ "$PWD" = "/" ] && echo "/" || echo " .."
}

function explorer {
	exa \
        $show_hidden_files \
        $long_info \
        --group \
		--icons \
		--classify \
		--git-ignore \
		--ignore-glob '.cache|.git|.vendor|node_modules|buffers' \
		--group-directories-first \
		--colour=always \
		--level 1 "${1:-$PWD}" | sed "s/\*$//g"
}

function search_files {
	if [ -f /tmp/lvim-file-manager/hidden-files ]; then
		fd -H --color always --type f
	else
		fd --color always --type f
	fi
}

function search_in_files {
	if [ -f /tmp/lvim-file-manager/hidden-files ]; then
        rg --hidden --follow --color=always -n ${list_files:+-l} "$1"
	else
        rg --follow --color=always -n ${list_files:+-l} "$1"
	fi
}

function get_list_for_fzf {
    if [[ $action == "menu" ]]; then
        print_fzf_menu "$1"
    elif [[ $action == "explorer" ]]; then
        print_fzf_header "$1"
        explorer "$1"
    elif [[ $action == "search-files" ]]; then
        search_files "$1"
    elif [[ $action == "search-in-files" ]]; then
        search_in_files "$1"
    fi
}

function strip_output {
	awk -F':' '{print $1}' |
        rev |
        cut -f1 -d ' ' |
        rev |
        sed \
            -e 's/\[[0-9];[0-9][0-9]m//g' \
            -e 's/\[[0-9];[0-9];[0-9][0-9]m//g' \
            -e 's/\[0m//g' \
            -e 's/ //g'
}

function get_column_to_search {
	# local nth=1
    if [[ $action == "explorer" ]] && [ -f /tmp/lvim-file-manager/long-info ]; then
        nth='8..-1'
    elif [[ $action == "explorer" ]] && [ ! -f /tmp/lvim-file-manager/long-info ]; then
        nth='2..-1'
	else
        nth=".."
	fi
	echo -n $nth
}

while :; do
    action=$(cat /tmp/lvim-file-manager/action)
    separator=("--separator=")
    header=("--header=")
    info=("--inline-info")
    no_border=("--no-border")
    border=("--border=none")
    pointer=("--pointer=")
    marker=("--marker=")
    multi=("-m")
    sort=("-s")
    tac=()
    delimiter=()
    long_info=""
    show_hidden_files=""
    preview_window_hidden=()
    preview_window=("--preview-window=right:50%:noborder")
    on_change="--bind=change:top"
    preview_window_for_search_in_files=()
    enter=("--bind=enter:accept")
    bind_base=(
        "--bind=ctrl-q:clear-selection+execute(echo QUIT)+abort"
        "--bind=esc:clear-selection+clear-query"
        "--bind=ctrl-d:preview-down,ctrl-u:preview-up"
        "--bind=alt-p:toggle-preview+execute( \
            touch /tmp/lvim-file-manager/prevent && \
            [ ! -f /tmp/lvim-file-manager/hidden-preview ] \
            && touch /tmp/lvim-file-manager/hidden-preview \
            || rm /tmp/lvim-file-manager/hidden-preview)"
        "--bind=alt-m:abort+clear-selection+execute-silent( \
            touch /tmp/lvim-file-manager/prevent && \
            echo menu > /tmp/lvim-file-manager/action \
            )+top+accept"
        "--bind=alt-e:abort+clear-selection+execute-silent( \
            touch /tmp/lvim-file-manager/prevent && \
            echo explorer > /tmp/lvim-file-manager/action \
            )+top+accept"
        "--bind=alt-f:abort+clear-selection+execute-silent( \
            touch /tmp/lvim-file-manager/prevent && \
            echo search-files > /tmp/lvim-file-manager/action \
            )+top+accept"
        "--bind=alt-s:abort+clear-selection+execute-silent( \
            touch /tmp/lvim-file-manager/prevent && \
            echo search-in-files > /tmp/lvim-file-manager/action \
            )+top+accept"

    )
    bind_group=()
    bind_app=()
    preview_engine=("--preview=VAL={..}; [ -f {2} -o -d {2} ] && VAL={2}; test -f \$VAL; [ -f {9} -o -d {9} ] && VAL={9}; test -f \$VAL && \
        {
            file -biz \$PWD/\$VAL | grep ^text &>/dev/null && {
            echo \$PWD/\$VAL | xargs bat --color=always --decorations=never;
            }
        }  \
        || \
        { \
            [ \$VAL != \$PWD ] && exa \
            $show_hidden_files \
            --group \
            --oneline \
            --git-ignore \
            --git \
            --ignore-glob '.cache|.git|.vendor|node_modules|buffers' \
            --colour=always \
            --icons \
            --group-directories-first \
            --classify \
            --level 1 \
            \$VAL 2>/dev/null
        }"
    )
    if [ -f /tmp/lvim-file-manager/hidden-preview ]; then
        preview_window_hidden=("--preview-window=:hidden")
    fi
    if [[ $action == "menu" ]]; then
        header=("--header= MENU")
        prompt=("--prompt=  Choice  ")
        preview_window_hidden=("--preview-window=:hidden")
    elif [[ $action == "explorer" ]]; then
        header=("--header=󰙅 EXPLORER  $PWD")
        prompt=("--prompt=  Browse  ")
        bind_app=(
            "--bind=alt-l:clear-selection+execute-silent( \
                touch /tmp/lvim-file-manager/prevent && \
                [ ! -f /tmp/lvim-file-manager/long-info ] \
                && touch /tmp/lvim-file-manager/long-info \
                || rm /tmp/lvim-file-manager/long-info \
                )+top+accept"
            "--bind=alt-h:clear-selection+execute-silent(\
                touch /tmp/lvim-file-manager/prevent && \
                [ ! -f /tmp/lvim-file-manager/hidden-files ] \
                && touch /tmp/lvim-file-manager/hidden-files \
                || rm /tmp/lvim-file-manager/hidden-files \
                )+top+accept"
        )
        if [ -f /tmp/lvim-file-manager/hidden-files ]; then
            show_hidden_files="-a"
        fi
        if [ -f /tmp/lvim-file-manager/long-info ]; then
            long_info="--long"
        fi
    elif [[ $action == "search-files" ]]; then
        header=("--header=󰈔 SEARCH FILES  $PWD")
        prompt=("--prompt=  Search  ")
        bind_app=(
            "--bind=alt-h:clear-selection+execute-silent(\
                touch /tmp/lvim-file-manager/prevent && \
                [ ! -f /tmp/lvim-file-manager/hidden-files ] \
                && touch /tmp/lvim-file-manager/hidden-files \
                || rm /tmp/lvim-file-manager/hidden-files \
                )+top+accept"
        )
    elif [[ $action == "search-in-files" ]]; then
        header=("--header=󰈙 SEARCH IN FILES  $PWD")
        prompt=("--prompt=  Search  ")
        bind_app=(
            "--bind=alt-h:clear-selection+execute-silent(\
                touch /tmp/lvim-file-manager/prevent && \
                [ ! -f /tmp/lvim-file-manager/hidden-files ] \
                && touch /tmp/lvim-file-manager/hidden-files \
                || rm /tmp/lvim-file-manager/hidden-files \
                )+top+accept"
        )
        # multi=("+m")
        preview_window_for_search_in_files=("--preview-window=~0,+{2}+1/2")
        delimiter=("--delimiter=:")
        preview_engine=("--preview=VAL={1} && \
    {
            file -biz \$PWD/\$VAL | grep ^text &>/dev/null && {
            bat --color=always --style=numbers -H {2} {1}
            }
        } \
        || \
        { \
            [ \$VAL != \$PWD ] && exa \
            $show_hidden_files \
            --group \
            --oneline \
            --git-ignore \
            --git \
            --ignore-glob '.cache|.git|.vendor|node_modules|buffers' \
            --colour=always \
            --icons \
            --group-directories-first \
            --classify \
            --level 1 \
            \$VAL 2>/dev/null
        }"
    )
    fi
	selected=$(
		get_list_for_fzf "$@" |
			IFS=$'\n' fzf \
				--query="$1" \
                --nth="$(get_column_to_search)" \
                "${delimiter[@]}" \
                "${separator[@]}" \
                "${prompt[@]}" \
                "${header[@]}" \
                --header-first \
                "${info[@]}" \
                "${no_border[@]}" \
                "${border[@]}" \
                "${pointer[@]}" \
                "${marker[@]}" \
                "${multi[@]}" \
                "${sort[@]}" \
                "${tac[@]}" \
                "${preview_engine[@]}" \
                "${preview_window[@]}" \
                "${preview_window_for_search_in_files[@]}" \
                "${preview_window_hidden[@]}" \
                "${on_change[@]}" \
                "${bind_base[@]}" \
                "${bind_group[@]}" \
                "${bind_app[@]}" \
                "${enter[@]}" \
	)
	if [[ $selected == "QUIT" ]]; then
		break
    elif [[ $action == "menu" ]]; then
        choice=$(
            echo "$selected" | cut -d" " -f2-
        )
        case "$choice" in
            "EXPLORER") echo "explorer" > /tmp/lvim-file-manager/action
            ;;
            "SEARCH FILES") echo "search-files" > /tmp/lvim-file-manager/action
            ;;
            "SEARCH IN FILES") echo "search-in-files" > /tmp/lvim-file-manager/action
            ;;
        esac
        return
    elif [[ $action == "search-in-files" ]]; then
        if [ -f /tmp/lvim-file-manager/prevent ]; then
            rm /tmp/lvim-file-manager/prevent
        else
            result=$(echo "$selected" | sed 's/:.*//g' | tr " " "\n")
            if [[ -f "$(echo "$result" | tail -n1)" ]]; then
                echo "$result" | tr " " "\n" > /tmp/lvim-shell
                break
            fi
        fi
    elif [[ $action == "search-files" ]]; then
        if [ -f /tmp/lvim-file-manager/prevent ]; then
            rm /tmp/lvim-file-manager/prevent
        else
            result=$(
                echo "$selected" | cut -d" " -f2-
            )
            if [[ -d $result ]]; then
                builtin cd "$result" || return
            elif [[ -f $(echo "$result" | tail -n1) ]]; then
                echo "$result" | tr " " "\n" > /tmp/lvim-shell
                break
            fi
        fi
    elif [[ $action == "explorer" ]]; then
        if [ -f /tmp/lvim-file-manager/prevent ]; then
            rm /tmp/lvim-file-manager/prevent
        else
            result=$(
                echo "$selected" |
                    rev |
                    cut -f1 -d ' ' |
                    rev |
                    sed \
                        -e 's/\[[0-9];[0-9][0-9]m//g' \
                        -e 's/\[[0-9];[0-9];[0-9][0-9]m//g' \
                        -e 's/\[0m//g' \
                        -e 's/ //g'
            )
            if [[ -d $result ]]; then
                builtin cd "$result" || return
            fi
            result_full_path=$(echo "$result" | sed "s|^|$PWD/|")
            if [[ -f $(echo "$result_full_path" | tail -n1) ]]; then
                echo "$result_full_path" | tr " " "\n" > /tmp/lvim-shell
                break
            fi
        fi
	fi
done

# vi: ft=bash
