#!/bin/bash
builtin cd "$1" || return

# LVIM_FM_PATH="/tmp/lvim-file-manager"

mkdir -p "$LVIM_FM_PATH"
chmod 777 "$LVIM_FM_PATH"

echo "$PWD" >"$LVIM_FM_PATH/base-directory"

if [[ -f $LVIM_FM_PATH/pwd ]]; then
	builtin cd "$(cat "$LVIM_FM_PATH/pwd")" || return
fi

if [[ ! -f $LVIM_FM_PATH/action ]]; then
	echo "menu" >"$LVIM_FM_PATH/action"
fi

function print_fzf_menu {
	echo "$ICON_EXPLORER" EXPLORER
	echo "$ICON_SEARCH_DIRECTORIES_AND_FILES" SEARCH DIRECTORIES AND FILES
	echo "$ICON_SEARCH_DIRECTORIES" SEARCH DIRECTORIES
	echo "$ICON_SEARCH_FILES" SEARCH FILES
	echo "$ICON_SEARCH_IN_FILES" SEARCH IN FILES
}

function print_fzf_header {
	echo " ."
	[[ $PWD = "/" ]] && echo "/" || echo " .."
}

function explorer {
	$EXPLORER $show_hidden_files $long_info "${1:-$PWD}" | sed "s/\*$//g"
}

function search_directories_and_files {
	if [ -f "$LVIM_FM_PATH/hidden-files" ]; then
		$SEARCH_DIRECTORIES_AND_FILES_WITN_HIDEN
	else
		$SEARCH_DIRECTORIES_AND_FILES_WITH_OUT_HIDEN
	fi
}

function search_directories {
	if [ -f "$LVIM_FM_PATH/hidden-files" ]; then
		$SEARCH_DIRECTORIES_WITN_HIDEN
	else
		$SEARCH_DIRECTORIES_WITH_OUT_HIDEN
	fi
}

function search_files {
	if [ -f "$LVIM_FM_PATH/hidden-files" ]; then
		$SEARCH_FILES_WITN_HIDEN
	else
		$SEARCH_FILES_WITH_OUT_HIDEN
	fi
}

function search_in_files {
	if [[ -f $LVIM_FM_PATH/hidden-files ]]; then
		$SEARCH_IN_FILES_WITH_HIDDEN -n ${list_files:+-l} "$1"
	else
		$SEARCH_IN_FILES_WITH_OUT_HIDDEN -n ${list_files:+-l} "$1"
	fi
}

function get_list_for_fzf {
	if [[ $action == "menu" ]]; then
		print_fzf_menu "$1"
	elif [[ $action == "explorer" ]]; then
		print_fzf_header "$1"
		explorer "$1"
	elif [[ $action == "search-directories-and-files" ]]; then
		print_fzf_header "$1"
		search_directories_and_files "$1"
	elif [[ $action == "search-directories" ]]; then
		print_fzf_header "$1"
		search_directories "$1"
	elif [[ $action == "search-files" ]]; then
		print_fzf_header "$1"
		search_files "$1"
	elif [[ $action == "search-in-files" ]]; then
		search_in_files "$1"
	fi
}

function get_column_to_search {
	# local nth=1
	if [[ $action == "explorer" ]] && [[ -f $LVIM_FM_PATH/long-info ]]; then
		nth='8..-1'
	elif [[ $action == "explorer" ]] && [[ ! -f $LVIM_FM_PATH/long-info ]]; then
		nth='2..-1'
	else
		nth=".."
	fi
	echo -n $nth
}

function post_action {
	is_break=false
	directories=()
	files=()
	for result in $selected; do
		if [[ $is_explorer ]]; then
			result=$PWD/$result
		fi
		if [[ -d $result ]]; then
			directories+=("$result")
		elif [[ -f $result ]]; then
			files+=("$result")
		fi
	done
	if [[ ${#directories[@]} -gt 0 ]]; then
		builtin cd "${directories[-1]}" || return
	fi
	if [[ ${#files[@]} != 0 ]]; then
		for i in "${files[@]}"; do
			echo "$i" >>/tmp/lvim-shell
		done
		is_break=true
	fi
	is_explorer=false
}

function post_action_search {
	is_break=false
	files=()
	clean_selected=$(echo "$selected" | sed "s/:.*//g")
	for result in $clean_selected; do
		files+=("$result")
	done
	mapfile -t files < <(echo "${files[@]}" | awk 'BEGIN{RS=" ";} !a[$1]++ {print $1}')
	if [[ ${#files[@]} != 0 ]]; then
		for i in "${files[@]}"; do
			echo "$i" >>/tmp/lvim-shell
		done
		is_break=true
	fi
	for i in "${selected[@]}"; do
		echo "$i" >>/tmp/lvim-shell_qf
	done
}

while :; do
	action=$(cat "$LVIM_FM_PATH/action")
	separator=("--separator=")
	header=("--header=")
	info=("--inline-info")
	no_border=("--no-border")
	border=("--border=none")
	pointer=("--pointer=$ICON_POINTER")
	marker=("--marker=$ICON_MARKER")
	multi=("-m")
	sort=("-s")
	tac=()
	delimiter=()
	long_info=""
	show_hidden_files=""
	preview_window_hidden=()
	preview_window=("--preview-window=right:50%:noborder")
	on_change="--bind=change:top"
	reload=()
	preview_window_for_search_in_files=()
	enter=("--bind=enter:accept")
	bind_base=(
		"--bind=$KEY_QUIT:clear-selection+execute(echo QUIT)+abort"
		"--bind=$KEY_CLEAR_QUERY:clear-selection+clear-query"
		"--bind=$KEY_PREVIEW_DOWN:preview-down,$KEY_PREVIEW_UP:preview-up,$KEY_PREVIEW_HALF_PAGE_DOWN:preview-half-page-down,$KEY_PREVIEW_HALF_PAGE_UP:preview-half-page-up"
		"--bind=$KEY_TOGGLE_PREVIEW:toggle-preview+execute( \
		          touch $LVIM_FM_PATH/prevent && \
		          [ ! -f $LVIM_FM_PATH/hidden-preview ] \
		          && touch $LVIM_FM_PATH/hidden-preview \
		          || rm $LVIM_FM_PATH/hidden-preview)"
		"--bind=$KEY_SAVE_CURRENT_PATH:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo $PWD > $LVIM_FM_PATH/pwd \
		          )+top+accept"
		"--bind=$KEY_DELETE_CURRENT_PATH:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          touch $LVIM_FM_PATH/reload && \
		          rm $LVIM_FM_PATH/pwd \
		          )+top+accept"
		"--bind=$KEY_MENU:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo menu > $LVIM_FM_PATH/action \
		          )+top+accept"
		"--bind=$KEY_EXPLORER:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo explorer > $LVIM_FM_PATH/action \
		          )+top+accept"
		"--bind=$KEY_SEARCH_DIRECTORIES_AND_FILES:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo search-directories-and-files > $LVIM_FM_PATH/action \
		          )+top+accept"
		"--bind=$KEY_SEARCH_DIRECTORIES:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo search-directories > $LVIM_FM_PATH/action \
		          )+top+accept"
		"--bind=$KEY_SEARCH_FILES:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo search-files > $LVIM_FM_PATH/action \
		          )+top+accept"
		"--bind=$KEY_SEARCH_IN_FILES:abort+clear-selection+execute-silent( \
		          touch $LVIM_FM_PATH/prevent && \
		          echo search-in-files > $LVIM_FM_PATH/action \
		          )+top+accept"
		"--bind=$KEY_TOGGLE_HIDDEN_FILES:clear-selection+execute-silent(\
		          touch $LVIM_FM_PATH/prevent && \
		          [ ! -f $LVIM_FM_PATH/hidden-files ] \
		          && touch $LVIM_FM_PATH/hidden-files \
		          || rm $LVIM_FM_PATH/hidden-files \
		          )+top+accept"
	)
	bind_group=()
	bind_app=()
	preview_engine=("--preview=VAL={..}; [ -f {2} -o -d {2} ] && VAL={2}; test -f \$VAL; [ -f {9} -o -d {9} ] && VAL={9}; test -f \$VAL && \
        {
            file -biz \$PWD/\$VAL | grep ^text &>/dev/null && {
            echo \$PWD/\$VAL | xargs bat --color=always --decorations=never;
            }
        }  \
        || \
        { \
            [ \$VAL != \$PWD ] && exa \
            $show_hidden_files \
            --group \
            --oneline \
            --colour=always \
            --icons \
            --group-directories-first \
            --classify \
            --level 1 \
            \$VAL 2>/dev/null
        }"
	)
	if [[ -f $LVIM_FM_PATH/hidden-preview ]]; then
		preview_window_hidden=("--preview-window=:hidden")
	fi
	if [[ $action == "menu" ]]; then
		header=("--header=$ICON_MENU MENU")
		prompt=("--prompt=  Choice $ICON_POINTER ")
		preview_window_hidden=("--preview-window=:hidden")
	elif [[ $action == "explorer" ]]; then
		header=("--header=$ICON_EXPLORER EXPLORER $ICON_SEPARATOR $PWD")
		prompt=("--prompt=  Browse $ICON_PROMPT ")
		bind_app=(
			"--bind=$KEY_EXPLORER_LONG_PATH:clear-selection+execute-silent( \
                touch $LVIM_FM_PATH/prevent && \
                [ ! -f $LVIM_FM_PATH/long-info ] \
                && touch $LVIM_FM_PATH/long-info \
                || rm $LVIM_FM_PATH/long-info \
                )+top+accept"
		)
		if [[ -f $LVIM_FM_PATH/hidden-files ]]; then
			show_hidden_files="-a"
		fi
		if [[ -f $LVIM_FM_PATH/long-info ]]; then
			long_info="--long"
		fi
	elif [[ $action == "search-directories-and-files" ]]; then
		header=("--header=$ICON_SEARCH_DIRECTORIES_AND_FILES SEARCH DIRECTORIES AND FILES $ICON_SEPARATOR $PWD")
		prompt=("--prompt=  Search $ICON_PROMPT ")
	elif [[ $action == "search-directories" ]]; then
		header=("--header=$ICON_SEARCH_DIRECTORIES SEARCH DIRECTORIES $ICON_SEPARATOR $PWD")
		prompt=("--prompt=  Search $ICON_PROMPT ")
	elif [[ $action == "search-files" ]]; then
		header=("--header=$ICON_SEARCH_FILES SEARCH FILES $ICON_SEPARATOR $PWD")
		prompt=("--prompt=  Search $ICON_PROMPT ")
	elif [[ $action == "search-in-files" ]]; then
		header=("--header=$ICON_SEARCH_IN_FILES SEARCH IN FILES $ICON_SEPARATOR $PWD")
		prompt=("--prompt=  Search $ICON_PROMPT ")
		if [[ -f $LVIM_FM_PATH/hidden-files ]]; then
			reload=("--bind=change:reload:$SEARCH_IN_FILES_WITH_HIDDEN -n ${list_files:+-l} {q} || true")
		else
			reload=("--bind=change:reload:$SEARCH_IN_FILES_WITH_OUT_HIDDEN -n ${list_files:+-l} {q} || true")
		fi
		preview_window_for_search_in_files=("--preview-window=~0,+{2}+1/2")
		delimiter=("--delimiter=:")
		preview_engine=("--preview=VAL={1} && \
        {
            file -biz \$PWD/\$VAL | grep ^text &>/dev/null && {
                bat --color=always --style=numbers -H {2} {1}
            }
        } \
        || \
        { \
            [ \$VAL != \$PWD ] && exa \
            $show_hidden_files \
            --group \
            --oneline \
            --colour=always \
            --icons \
            --group-directories-first \
            --classify \
            --level 1 \
            \$VAL 2>/dev/null
        }"
		)
	fi
	selected=$(
		get_list_for_fzf "$@" |
			IFS=$'\n' fzf \
				"$REVERSE" \
				--query="$1" \
				--nth="$(get_column_to_search)" \
				"${delimiter[@]}" \
				"${separator[@]}" \
				"${prompt[@]}" \
				"${header[@]}" \
				--header-first \
				"${info[@]}" \
				"${no_border[@]}" \
				"${border[@]}" \
				"${pointer[@]}" \
				"${marker[@]}" \
				"${multi[@]}" \
				"${sort[@]}" \
				"${tac[@]}" \
				"${preview_engine[@]}" \
				"${preview_window[@]}" \
				"${preview_window_for_search_in_files[@]}" \
				"${preview_window_hidden[@]}" \
				"${on_change[@]}" \
				"${reload[@]}" \
				"${bind_base[@]}" \
				"${bind_group[@]}" \
				"${bind_app[@]}" \
				"${enter[@]}"
	)
	if [[ $selected == "QUIT" ]]; then
		break
	elif [[ $action == "menu" ]]; then
		choice=$(
			echo "$selected" | cut -d" " -f2-
		)
		case "$choice" in
		"EXPLORER")
			echo "explorer" >"$LVIM_FM_PATH/action"
			;;
		"SEARCH DIRECTORIES AND FILES")
			echo "search-directories-and-files" >"$LVIM_FM_PATH/action"
			;;
		"SEARCH DIRECTORIES")
			echo "search-directories" >"$LVIM_FM_PATH/action"
			;;
		"SEARCH FILES")
			echo "search-files" >"$LVIM_FM_PATH/action"
			;;
		"SEARCH IN FILES")
			echo "search-in-files" >"$LVIM_FM_PATH/action"
			;;
		esac
		return
	elif [[ $action == "search-in-files" ]]; then
		if [[ -f $LVIM_FM_PATH/prevent ]]; then
			rm "$LVIM_FM_PATH/prevent"
			if [[ -f $LVIM_FM_PATH/reload ]]; then
				rm "$LVIM_FM_PATH/reload"
				builtin cd "$(cat "$LVIM_FM_PATH/base-directory")" || return
			fi
		else
			if [[ $selected == " .." ]]; then
				builtin cd .. || return
			fi
			post_action_search
			if [[ $is_break == true ]]; then
				break
			fi
		fi
	elif [[ $action == "search-directories-and-files" ]] || [[ $action == "search-directories" ]] || [[ $action == "search-files" ]]; then
		if [[ -f $LVIM_FM_PATH/prevent ]]; then
			rm "$LVIM_FM_PATH/prevent"
			if [[ -f $LVIM_FM_PATH/reload ]]; then
				rm "$LVIM_FM_PATH/reload"
				builtin cd "$(cat "$LVIM_FM_PATH/base-directory")" || return
			fi
		else
			result=$(
				echo "$selected" |
					rev |
					cut -f1 -d ' ' |
					rev |
					sed \
						-e 's/\[[0-9];[0-9][0-9]m//g' \
						-e 's/\[[0-9];[0-9];[0-9][0-9]m//g' \
						-e 's/\[0m//g' \
						-e 's/ //g'
			)
			post_action
			if [[ $is_break == true ]]; then
				break
			fi
		fi
	elif [[ $action == "explorer" ]]; then
		if [[ -f $LVIM_FM_PATH/prevent ]]; then
			rm "$LVIM_FM_PATH/prevent"
			if [[ -f $LVIM_FM_PATH/reload ]]; then
				rm "$LVIM_FM_PATH/reload"
				builtin cd "$(cat "$LVIM_FM_PATH/base-directory")" || return
			fi
		else
			result=$(
				echo "$selected" |
					rev |
					cut -f1 -d ' ' |
					rev |
					sed \
						-e 's/\[[0-9];[0-9][0-9]m//g' \
						-e 's/\[[0-9];[0-9];[0-9][0-9]m//g' \
						-e 's/\[0m//g' \
						-e 's/ //g'
			)
			is_explorer=true
			post_action
			if [[ $is_break == true ]]; then
				break
			fi
		fi
	fi
done

# vi: ft=sh
